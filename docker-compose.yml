services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: mememuseum
    env_file:
      - .env
    ports:
      - "80:80"
    volumes:
      - image_data:/data/uploads
    depends_on:
      postgres:
        condition: service_healthy

  e2e:
    build:
      context: ./app
      dockerfile: Dockerfile
      target: e2e-test
    container_name: e2e_tests
    depends_on:
      app:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CYPRESS_BASE_URL=http://app:80
    volumes:
      - ./app/frontend/cypress:/e2e/cypress
      - ./app/frontend/cypress/videos:/e2e/cypress/videos
      - ./app/frontend/cypress/screenshots:/e2e/cypress/screenshots

  flyway:
    image: flyway/flyway:latest
    container_name: flyway_tecweb
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      FLYWAY_URL: ${POSTGRES_URL}
      FLYWAY_USER: ${POSTGRES_USER}
      FLYWAY_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./migrations:/flyway/sql/migrations
    restart: "no"
    command: migrate

  postgres:
    image: postgres:alpine
    container_name: postgres_tecweb
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:

  image_data:
